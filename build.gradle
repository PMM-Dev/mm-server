buildscript {
    ext {
        springBootVersion = '2.1.9.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.kwon770'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation group: 'org.apache.tomcat', name: 'tomcat-jdbc'
    implementation 'junit:junit:4.12'

    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.5.0'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.5.0'

    compile('com.h2database:h2')
    implementation('org.mariadb.jdbc:mariadb-java-client')

    // QueryDSL
    implementation("com.querydsl:querydsl-core") // querydsl
    implementation("com.querydsl:querydsl-jpa") // querydsl
    testImplementation("com.querydsl:querydsl-core") // querydsl
    testImplementation("com.querydsl:querydsl-jpa") // querydsl
    // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
    annotationProcessor group: 'jakarta.persistence', name: 'jakarta.persistence-api', version: '2.2.3'
    annotationProcessor group: 'jakarta.annotation', name: 'jakarta.annotation-api', version: '1.3.5'

    // Lombok
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // jwt
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtime group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtime group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

    implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
}

def generated = 'src/main/generated'
sourceSets {
    main.java.srcDirs += [generated]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean.doLast {
    file(generated).deleteDir()
}